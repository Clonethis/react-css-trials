/* universal selector for loading all elements same*/
* {
  /* we want to specify our own styling for own elements */
  margin: 0;
  padding: 0;
  /* Include padding and border in the element's total width and height: */
  box-sizing: border-box;
}
/* @media screen and (max-width: 718px) {
  .heading-primary-main {
    font-size: 40px;
    letter-spacing: 0px;
  }
  .heading-primary-secondary {
    font-size: 20px;
    background-color: aqua;
  }
} */
:root {
  --animationTime: 1.3s;
  --font-Family: "Lato", sans-serif;
  --button-color: "";
  --primary-color: "";
  --body-padding: 0px;
}
body {
  font-family: var(--font-Family);
  font-weight: 400;
  font-size: 16px;
  line-height: 1.4;
  color: #777;
  padding: var(--body-padding);
}
.header {
  height: 95vh;

  /* background-image with ',' specify more than one background */
  /* linear-gradient makes color change from former to latter -> directions are first argument */
  background-image: linear-gradient(
      to left bottom,
      rgba(255, 25, 0, 0.57),
      rgba(247, 250, 59, 0.789)
    ),
    url("./images/cricket.jpg");
  /* background: tomato; */
  /* always try to suit the viewport */
  background-size: cover;
  position: relative;

  background-position: top;
  /* for creating desired shape
    -starts from left-top corner to right-top...
    -polygon(x y,x y....)
  */
  /* or use clippy.com -> get shape from preset layouts */
  /* clip-path: polygon(0 0, 100% 50%, 0 100%); */
  clip-path: polygon(0 0, 100% 0, 100% 80vh, 20% 100%, 0 100%);
}
.logo-box {
  position: absolute;
  left: 40px;
  top: 40px;
}
.logo {
  width: 40vh;
}
.heading-primary {
  color: aliceblue;
  text-transform: uppercase;
}
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 800;
  margin-bottom: -16px;
  letter-spacing: 10px;
  animation-name: moveInLeft;
  animation-duration: 1s;
}
.heading-primary-secondary {
  /* for removing some artefacts
     backface-visibility: hidden; */
  display: block;
  font-weight: 400;
  color: rgb(233, 227, 227);
  font-size: 25px;

  letter-spacing: 7.3px;
  animation-name: moveInRight;
  animation-duration: 1s;
  margin-bottom: 60px;
  /* animation-timing-function: ease-out; */
}
.center-text-box {
  position: absolute;
  /* position begining of element in center || parent element */

  top: 53%;
  left: 50%;
  /* this will position element right into center -> NEEDS COMMA BETWEEN VALUES*/
  transform: translate(-50%, -50%);

  /* Sets text/content in center of div */
  text-align: center;
}
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translate(-100px, 40px) rotate(15deg);
  }
  65% {
    transform: translate(10px, -2px) rotate(15deg);
  }
  100% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0.1;
    transform: translate(100px, 40px);
  }
  69% {
    opacity: 0.4;
    transform: translate(-10px, 6px);
  }
  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}
/* pseudo classes ( like event in js ) -> those are 'something:link' for example  */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  /* sets inner sizes of background */
  padding: 14px 40px;
  /* sets non inteference with previous elements ( move away from overlapping elemen) */
  display: inline-block;
  /* on action/hover -> this will set default time and what to animate (all)  */
  /* must be on initial state */
  transition: all 0.2s;
  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);
  /* for setting up ::after element */
  position: relative;
}
.btn-animated {
  /* when delay btn is loaded before and shows before animation */
  animation: btnLoadAnimationFromBottom 1.3s 0.4s;
  /* makes shure that btn isn't visible before animation begin */
  animation-fill-mode: backwards;
}
@keyframes btnLoadAnimationFromBottom {
  0% {
    opacity: 0;
    transform: translateY(100px);
  }
  90% {
    transform: translateY(-2px);
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}
.btn:hover {
  /* moves item up */
  transform: translateY(-6px);
  /* box-shadow: x y blur color; */
  box-shadow: 0px 9px 20px rgba(0, 0, 0, 0.3);
}
.btn:active {
  /* it doesnt inherit from hover state -> JUST FROM PARENT ELEMENT -> in this case .btn/.btn:link */
  transform: translateY(-3px);
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.25);
}
.btn-main-white {
  color: rgb(67, 65, 64);
  background-color: beige;
  /* border: 6px solid transparent; */
  border-radius: 28px;

  /* font-size: 30px; */
}
/* this will setup after clicking on button / child of btn element */
.btn::after {
  /* content and display must be set up otherwise it won't show on page */
  content: "";
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 100px;
  /* due to showing inside button i must set up pos.absolute to set this behind parent button */
  position: absolute;
  top: 0;
  left: 0;
  /* puts ::after element behind parent element */
  z-index: -1;
  transition: all 0.2s;
}
.btn-main-white::after {
  background-color: beige;
}

.btn:hover::after {
  transform: scaleX(1.8) scaleY(2.1);
  opacity: 0;
}
